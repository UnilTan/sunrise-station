- type: entity
  parent: BaseItem
  id: LogicEmptyCircuit
  name: empty circuit
  description: Something seems to be missing.
  components:
  - type: Sprite
    drawdepth: ThinPipe
    sprite: Objects/Devices/gates.rsi
    layers:
    - state: base
  - type: Anchorable
  - type: Rotatable
  - type: Construction
    graph: LogicGate
    node: empty

- type: entity
  abstract: true
  parent: LogicEmptyCircuit
  id: BaseLogicItem
  components:
  - type: DeviceNetwork
    deviceNetId: Wireless
    receiveFrequencyId: BasicDevice
  - type: WirelessNetworkConnection
    range: 200

- type: entity
  parent: BaseLogicItem
  id: LogicGateOr
  name: logic gate
  description: A logic gate with two inputs and one output. Technicians can change its mode of operation using a screwdriver.
  suffix: Or
  components:
  - type: Sprite
    layers:
    - state: base
    - state: logic
    - state: logic_a
      visible: false
      map: [ "enum.LogicGateLayers.InputA" ]
    - state: logic_b
      visible: false
      map: [ "enum.LogicGateLayers.InputB" ]
    - state: logic_o
      visible: false
      map: [ "enum.LogicGateLayers.Output" ]
    - state: or
      map: [ "enum.LogicGateLayers.Gate" ]
  - type: LogicGate
  - type: UseDelay
    delay: 0.5
  - type: DeviceLinkSink
    ports:
    - InputA
    - InputB
  - type: DeviceLinkSource
    ports:
    - Output
    lastSignals:
      Output: false
  - type: Construction
    node: logic_gate
  - type: Appearance
  - type: GenericVisualizer
    visuals:
      enum.LogicGateVisuals.Gate:
        enum.LogicGateLayers.Gate:
          Or: { state: or }
          And: { state: and }
          Xor: { state: xor }
          Nor: { state: nor }
          Nand: { state: nand }
          Xnor: { state: xnor }
      enum.LogicGateVisuals.InputA:
        enum.LogicGateLayers.InputA:
          True: { visible: true }
          False: { visible: false }
      enum.LogicGateVisuals.InputB:
        enum.LogicGateLayers.InputB:
          True: { visible: true }
          False: { visible: false }
      enum.LogicGateVisuals.Output:
        enum.LogicGateLayers.Output:
          True: { visible: true }
          False: { visible: false }
- type: entity
  parent: LogicGateOr
  id: LogicGateAnd
  suffix: And
  components:
  - type: Sprite
    layers:
    - state: base
    - state: logic
    - state: logic_a
      visible: false
      map: [ "enum.LogicGateLayers.InputA" ]
    - state: logic_b
      visible: false
      map: [ "enum.LogicGateLayers.InputB" ]
    - state: logic_o
      visible: false
      map: [ "enum.LogicGateLayers.Output" ]
    - state: and
      map: [ "enum.LogicGateLayers.Gate" ]
  - type: LogicGate
    gate: And

- type: entity
  parent: LogicGateOr
  id: LogicGateXor
  suffix: Xor
  components:
  - type: Sprite
    layers:
    - state: base
    - state: logic
    - state: logic_a
      visible: false
      map: [ "enum.LogicGateLayers.InputA" ]
    - state: logic_b
      visible: false
      map: [ "enum.LogicGateLayers.InputB" ]
    - state: logic_o
      visible: false
      map: [ "enum.LogicGateLayers.Output" ]
    - state: xor
      map: [ "enum.LogicGateLayers.Gate" ]
  - type: LogicGate
    gate: Xor

- type: entity
  parent: LogicGateOr
  id: LogicGateNor
  suffix: Nor
  components:
  - type: Sprite
    layers:
    - state: base
    - state: logic
    - state: logic_a
      visible: false
      map: [ "enum.LogicGateLayers.InputA" ]
    - state: logic_b
      visible: false
      map: [ "enum.LogicGateLayers.InputB" ]
    - state: logic_o
      visible: false
      map: [ "enum.LogicGateLayers.Output" ]
    - state: nor
      map: [ "enum.LogicGateLayers.Gate" ]
  - type: LogicGate
    gate: Nor

- type: entity
  parent: LogicGateOr
  id: LogicGateNand
  suffix: Nand
  components:
  - type: Sprite
    layers:
    - state: base
    - state: logic
    - state: logic_a
      visible: false
      map: [ "enum.LogicGateLayers.InputA" ]
    - state: logic_b
      visible: false
      map: [ "enum.LogicGateLayers.InputB" ]
    - state: logic_o
      visible: false
      map: [ "enum.LogicGateLayers.Output" ]
    - state: nand
      map: [ "enum.LogicGateLayers.Gate" ]
  - type: LogicGate
    gate: Nand

- type: entity
  parent: LogicGateOr
  id: LogicGateXnor
  suffix: Xnor
  components:
  - type: Sprite
    layers:
    - state: base
    - state: logic
    - state: logic_a
      visible: false
      map: [ "enum.LogicGateLayers.InputA" ]
    - state: logic_b
      visible: false
      map: [ "enum.LogicGateLayers.InputB" ]
    - state: logic_o
      visible: false
      map: [ "enum.LogicGateLayers.Output" ]
    - state: xnor
      map: [ "enum.LogicGateLayers.Gate" ]
  - type: LogicGate
    gate: Xnor

- type: entity
  parent: BaseLogicItem
  id: EdgeDetector
  name: edge detector
  description: Splits rising and falling edges into unique pulses and detects how edgy you are.
  components:
  - type: Sprite
    layers:
    - state: base
    - state: edge_detector
  - type: EdgeDetector
  - type: DeviceLinkSink
    ports:
    - Input
  - type: DeviceLinkSource
    ports:
    - OutputHigh
    - OutputLow
    lastSignals:
      OutputHigh: false
      OutputLow: false
  - type: Construction
    node: edge_detector

- type: entity
  parent: BaseLogicItem
  id: PowerSensor
  name: power sensor
  description: Generates signals in response to powernet changes. Can be cycled between cable voltages.
  components:
  - type: Sprite
    layers:
    - state: base
    - state: power_sensor
  - type: PowerSensor
  - type: PowerSwitchable
    examineText: power-sensor-voltage-examine
    switchText: power-sensor-voltage-switch
    cables:
    - voltage: HV
      node: hv
    - voltage: MV
      node: mv
    - voltage: LV
      node: lv
  - type: UseDelay
    delay: 1
  - type: NodeContainer
    examinable: true
    nodes:
      hv:
        !type:CableDeviceNode
        nodeGroupID: HVPower
      mv:
        !type:CableDeviceNode
        nodeGroupID: MVPower
        enabled: false
      lv:
        !type:CableDeviceNode
        nodeGroupID: Apc
        enabled: false
  - type: DeviceLinkSource
    ports:
    - PowerCharging
    - PowerDischarging
    lastSignals:
      PowerCharging: false
      PowerDischarging: false
  - type: Construction
    node: power_sensor

- type: entity
  parent: BaseLogicItem
  id: MemoryCell
  name: memory cell
  description: A D-Latch circuit that stores a signal which can be changed depending on input and enable ports.
  components:
  - type: Sprite
    layers:
    - state: base
    - state: memory_cell
  - type: MemoryCell
  - type: DeviceLinkSink
    ports:
    - MemoryInput
    - MemoryEnable
  - type: DeviceLinkSource
    ports:
    - Output
  - type: Construction
    node: memory_cell

# New Advanced Logic Components
- type: entity
  parent: BaseLogicItem
  id: EqualsGate
  name: equals gate
  description: Compares two signals and outputs success or failure. Based on the Russian specification.
  components:
  - type: Sprite
    layers:
    - state: base
    - state: logic
    - state: equals
  - type: EqualsGate
  - type: DeviceLinkSink
    ports:
    - InputA
    - InputB
  - type: DeviceLinkSource
    ports:
    - Output
    lastSignals:
      Output: false

- type: entity
  parent: BaseLogicItem
  id: NotGate
  name: not gate
  description: Inverts the input signal. Can be configured to treat empty signals as false or null.
  components:
  - type: Sprite
    layers:
    - state: base
    - state: logic
    - state: not
  - type: NotGate
  - type: DeviceLinkSink
    ports:
    - Input
  - type: DeviceLinkSource
    ports:
    - Output
    lastSignals:
      Output: false

- type: entity
  parent: BaseLogicItem
  id: TextScreen
  name: text screen
  description: Displays the received signal value. Does not update for empty signals.
  components:
  - type: Sprite
    layers:
    - state: base
    - state: text_screen
  - type: TextScreen
  - type: DeviceLinkSink
    ports:
    - Input

- type: entity
  parent: BaseLogicItem
  id: EnhancedMemory
  name: enhanced memory
  description: Stores signal values with locking capability. Always outputs its stored value.
  components:
  - type: Sprite
    layers:
    - state: base
    - state: enhanced_memory
  - type: EnhancedMemory
  - type: DeviceLinkSink
    ports:
    - MemoryInput
    - LockState
  - type: DeviceLinkSource
    ports:
    - Output
    lastSignals:
      Output: false

- type: entity
  parent: BaseLogicItem
  id: DelayGate
  name: delay gate
  description: Delays signals by a specified time. Can be configured for impulse or smoothing modes.
  components:
  - type: Sprite
    layers:
    - state: base
    - state: logic
    - state: delay
  - type: DelayGate
  - type: DeviceLinkSink
    ports:
    - Input
  - type: DeviceLinkSource
    ports:
    - Output
    lastSignals:
      Output: false

- type: entity
  parent: BaseLogicItem
  id: ArithmeticGate
  name: arithmetic gate
  description: Performs arithmetic operations on signals. Use screwdriver to change operation.
  components:
  - type: Sprite
    layers:
    - state: base
    - state: logic
    - state: arithmetic
  - type: ArithmeticGate
  - type: DeviceLinkSink
    ports:
    - InputA
    - InputB
  - type: DeviceLinkSource
    ports:
    - Output
    lastSignals:
      Output: false

- type: entity
  parent: BaseLogicItem
  id: WifiGate
  name: wifi gate
  description: Transmits and receives wireless signals on configurable channels.
  components:
  - type: Sprite
    layers:
    - state: base
    - state: logic
    - state: wifi
  - type: WifiGate
  - type: DeviceLinkSink
    ports:
    - Input
    - SetTarget
  - type: DeviceLinkSource
    ports:
    - Output
    lastSignals:
      Output: false

- type: entity
  parent: BaseLogicItem
  id: PowerRelay
  name: power relay
  description: Controls both power flow and signal routing. Can limit power to 1000W maximum.
  components:
  - type: Sprite
    layers:
    - state: base
    - state: logic
    - state: relay
  - type: PowerRelay
  - type: DeviceLinkSink
    ports:
    - Toggle
    - SetState
    - SignalInputA
    - SignalInputB
  - type: DeviceLinkSource
    ports:
    - StateOutput
    - SignalOutputA
    - SignalOutputB
    - LoadOutput
    - PowerOutput
    lastSignals:
      StateOutput: false
      SignalOutputA: false
      SignalOutputB: false
      LoadOutput: false
      PowerOutput: false
  # Power components for relay functionality
  - type: PowerConsumer
    voltage: Medium
    priority: Low
  - type: PowerSupplier
    supplyRate: 1000
    voltage: Medium
