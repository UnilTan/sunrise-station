using System.Text;
using Content.Client.Administration.Managers;
using Content.Client.UserInterface.Controls;
using Content.Shared.Administration;
using Robust.Client.AutoGenerated;
using Robust.Client.Console;
using Robust.Client.UserInterface;
using Robust.Client.UserInterface.Controls;
using Robust.Client.UserInterface.XAML;
using Robust.Shared.Localization;
using Robust.Client.Player;

namespace Content.Client.Administration.UI.Bwoink
{
    [GenerateTypedNameReferences]
    public sealed partial class AdminWhoWindow : FancyWindow
    {
        [Dependency] private readonly IClientAdminManager _adminManager = default!;
        [Dependency] private readonly IClientConsoleHost _console = default!;
        [Dependency] private readonly IPlayerManager _playerManager = default!;

        public AdminWhoWindow()
        {
            RobustXamlLoader.Load(this);
            IoCManager.InjectDependencies(this);

            RefreshButton.OnPressed += _ => RefreshAdminList();
            CloseButton.OnPressed += _ => Close();

            // Refresh the list when the window opens
            RefreshAdminList();
        }

        private void RefreshAdminList()
        {
            AdminsContainer.RemoveAllChildren();

            // Execute the adminwho command to display results in console
            _console.ExecuteCommand("adminwho");

            // Add instructions to the window
            var instructionsLabel = new Label
            {
                Text = Loc.GetString("admin-who-console-message"),
                StyleClasses = { "LabelText" },
                HorizontalAlignment = Control.HAlignment.Center,
                Margin = new Thickness(8, 16, 8, 8)
            };
            AdminsContainer.AddChild(instructionsLabel);

            // Add information about what the command does
            var infoLabel = new Label
            {
                Text = Loc.GetString("admin-who-info"),
                StyleClasses = { "LabelSubText" },
                HorizontalAlignment = Control.HAlignment.Center,
                Margin = new Thickness(8, 8, 8, 16)
            };
            AdminsContainer.AddChild(infoLabel);
        }
    }
}