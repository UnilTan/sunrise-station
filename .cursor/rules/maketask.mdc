---
description: Make task or progress for the project
globs:
alwaysApply: true
---

## Frontier-Specific Content Rules

### New Content Placement
All content created from scratch (as opposed to modifications to existing upstream code) must be placed in subdirectories with the `_Lua` prefix.

Examples:
- `Content.Server/_Lua/Shipyard/Systems/ShipyardSystem.cs`
- `Resources/Prototypes/_Lua/Loadouts/role_loadouts.yml`
- `Resources/Audio/_Lua/Voice/Goblin/goblin-scream-03.ogg`
- `Resources/Textures/_Lua/Tips/clippy.rsi/left.png`
- `Resources/Locale/en-US/_Lua/devices/pda.ftl`
- `Resources/ServerInfo/_Lua/Guidebook/Medical/Doc.xml`

### Upstream File Modifications
When modifying C# or YAML files from upstream, always add comments near the changed lines. This helps simplify conflict resolution during future updates.

When changing values, use the Lua comment format: `OLD<NEW`.

#### YAML Guidelines:
- If adding a prototype or set of consecutive prototypes — use block comments.
- If modifying individual prototype fields — comment each one separately.

#### C# Guidelines:
- If adding a lot of code, consider extracting to a partial class when appropriate.
- If porting features from upstream, specify the PR number from which the code was taken.

⚠️ **Fluent files (.ftl) do not support comments on the same line as translations** — leave comments on the line above.

### Comment Examples

**YAML field change:**
```yaml
- type: entity
  id: TorsoHarpy
  name: "harpy torso"
  parent: [PartHarpy, BaseTorso] #Lua: добавлен BaseTorso
```

**Value change:**
```yaml
- type: Gun
  fireRate: 4 #Lua: 3<4
```

**New prototype addition:**
```yaml
- type: ItemBorgModule
  moduleId: Gardening #Lua
  items:
  - HydroponicsToolMiniHoe
  - HydroponicsToolSpade
  - HydroponicsToolClippers
  # - Bucket #Lua
#Lua: добавлены выпадающие борг-компоненты
- type: DroppableBorgModule
  moduleId: Gardening
  items:
  - id: Bucket
    whitelist:
      tags:
      - Bucket
# End Lua
```

**C# using statement:**
```csharp
using Content.Client._NF.Emp.Overlays; //Lua
```

**C# code block wrapper:**
```csharp
component.Capacity = state.Capacity;

component.UIUpdateNeeded = true;

//Lua Start: синхронизация цвета подписи
if (TryComp<StampComponent>(uid, out var stamp))
{
    stamp.StampedColor = state.Color;
}
//Lua End
```

**Localization change:**
```ftl
#Lua: "Job Whitelists"<"Role Whitelists"
player-panel-job-whitelists = Role Whitelists
```

---
